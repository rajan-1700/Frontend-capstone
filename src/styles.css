/* You can add global styles to this file, and also import other style files */
html, body {
  height: 100%;
  margin: 0;
}

body {
  display: flex;
  flex-direction: column;
  min-height: 100vh; /* full viewport height */
}

app-root {
  display: flex;
  flex-direction: column;
  flex: 1;
}

.main-content {
  flex: 1; /* pushes footer down */
}

footer {
  background-color: #001f3f; /* navy */
  color: white;
  padding: 1rem;
  text-align: center;
  margin-top: auto; /* stick footer at bottom */
}



/* 12:51
<div class="container mt-4 page-wrap">
  <!-- Search Input -->
  <div class="mb-4">
    <input type="text"
           [(ngModel)]="query"
           (ngModelChange)="onQueryChange()"
           class="form-control form-control-lg shadow-sm"
           placeholder="Search for an author...">
  </div>
  <!-- Author Results -->
  <div *ngIf="results.length" class="mb-5">
    <h4 class="mb-3">Author Results</h4>
    <ul class="list-group">
      <li *ngFor="let author of results"
          class="list-group-item list-group-item-action d-flex justify-content-between align-items-center hover-card"
          (click)="viewWorks(author.key)">
        <span>
          <strong>{{ author.name }}</strong>
          <small class="text-muted ms-2">Birth: {{ author.birth_date || 'Unknown' }}</small>
        </span>
        <span class="badge bg-navy">{{ author.work_count }} works</span>
      </li>
    </ul>
  </div>
<!-- Trending Books -->
<div class="mb-5" *ngIf="popularBooks.length">
  <h4 class="mb-3">:fire: Trending Books</h4>
  <div class="row g-3">
    <div class="col-6 col-md-4 col-lg-2" *ngFor="let book of popularBooks">
      <div class="card book-card shadow-sm">
        <div class="card-img-top-wrapper" style="position: relative; height: 180px; overflow: hidden;">
          <img *ngIf="!imageErrorMap[book.key || book.title]"
               [src]="getCoverImage(book)"
               class="card-cover"
               alt="Book Cover"
               (error)="onImageError(book.key || book.title)">
          <div *ngIf="imageErrorMap[book.key || book.title]"
               class="fallback-image d-flex align-items-center justify-content-center"
               [style.background]="fallbackColors[getColorIndex(book.title || 'a')]"
               [style.fontFamily]="fallbackFonts[getFontIndex(book.title || 'a')]">
            <span class="fallback-title text-center px-2">{{ book.title }}</span>
          </div>
        </div>
        <div class="card-body p-2 d-flex flex-column justify-content-between">
          <h6 class="card-title mb-1" [style.fontSize.px]="14" [style.fontFamily]="fallbackFonts[getFontIndex(book.title || 'a')]">{{ book.title }}</h6>
          <small class="text-muted">{{ book.authors?.[0]?.name }}</small>
<button class="btn btn-sm btn-outline-primary d-flex align-items-center gap-1" (click)="toggleFavourite(book)">
  <i class="bi"
     [ngClass]="isFavourite(book) ? 'bi-heart-fill text-danger' : 'bi-heart'"></i>
  Add to Favourites
</button>
        </div>
      </div>
    </div>
  </div>
</div>
<!-- Author Works -->
<div #authorWorksSection *ngIf="works.length" class="mt-5 pt-4 border-top">
  <h4 class="mb-4 text-navy">:books: Books by {{ selectedAuthorName }}</h4>
  <div class="row g-3">
    <div class="col-6 col-md-4 col-lg-2" *ngFor="let book of works">
      <div class="card book-card shadow-sm">
        <div class="card-img-top-wrapper" style="position: relative; height: 180px; overflow: hidden;">
          <img *ngIf="!imageErrorMap[book.key || book.title]"
               [src]="getCoverImage(book)"
               class="card-cover"
               alt="Book Cover"
               (error)="onImageError(book.key || book.title)">
          <div *ngIf="imageErrorMap[book.key || book.title]"
               class="fallback-image d-flex align-items-center justify-content-center"
               [style.background]="fallbackColors[getColorIndex(book.title || 'a')]"
               [style.fontFamily]="fallbackFonts[getFontIndex(book.title || 'a')]">
            <span class="fallback-title text-center px-2">{{ book.title }}</span>
          </div>
        </div>
        <div class="card-body p-2 d-flex flex-column justify-content-between">
          <h6 class="card-title mb-1" [style.fontSize.px]="14" [style.fontFamily]="fallbackFonts[getFontIndex(book.title || 'a')]">{{ book.title }}</h6>
          <button
            class="btn btn-sm btn-outline-primary mt-2 d-flex align-items-center justify-content-center gap-1"
            (click)="toggleFavourite(book)">
            <i class="bi" [ngClass]="isFavourite(book) ? 'bi-heart-fill text-danger' : 'bi-heart'"></i>
            <span class="xsmall">Favourite</span>
          </button>
        </div>
      </div>
    </div>
  </div>
</div> */





